name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Set the permission to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  NODE_VERSION: '20'  # Latest LTS
  PYTHON_VERSION: '3.10'
  BASE_URL: '/www'  # GitHub Pages repository path

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags
      
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r repo-analyzer/requirements.txt
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and run repository analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Build the analyzer image
          docker build -t repo-analyzer ./repo-analyzer
          
          # Create data directory
          mkdir -p data
          
          # Run analysis
          docker run --rm \
            -e "GITHUB_TOKEN=$GITHUB_TOKEN" \
            -e "GITHUB_ORG=wronai" \
            -v "$(pwd)/data:/data" \
            repo-analyzer python /app/analyze_repo.py
          
          # Update repos.json with analyzed data
          if [ -f "data/repos_updated.json" ]; then
            cp data/repos_updated.json repos.json
          else
            echo "Warning: repos_updated.json not found, using existing repos.json"
          fi
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install and build
        run: |
          # Install dependencies
          npm ci --no-audit
          
          # Build the production site
          npm run build
          
          # Create SPA 404 page
          echo '<!DOCTYPE html><html><head><meta charset="utf-8"><title>Redirecting...</title>' > dist/404.html
          echo '<script>sessionStorage.redirect = location.href.replace(/\.html$/, "");</script>' >> dist/404.html
          echo '<meta http-equiv="refresh" content="0;URL='\''/www/'"></head>' >> dist/404.html
          echo '<body>Redirecting to <a href="/www/">home page</a>...</body></html>' >> dist/404.html
          
          # Verify build output
          ls -la dist/
          [ -f dist/index.html ] || { echo "Error: index.html not found in dist/" && exit 1; }
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
