name: Deploy Static Site to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  workflow_run:
    workflows: ["Analyze Repositories"]
    types: [completed]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  NODE_VERSION: '20'  # Updated to latest LTS
  BASE_URL: '/www'

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          # Generate package-lock.json if it doesn't exist
          if [ ! -f package-lock.json ]; then
            npm install --package-lock-only
          fi
          npm ci --no-audit
          
      - name: Setup repository data
        run: |
          # Create data directory if it doesn't exist
          mkdir -p data
          
          # Create or update repos.json with proper permissions
          if [ ! -f "repos.json" ]; then
            echo '{"repositories": []}' > repos.json
            echo "Created empty repos.json"
          else
            echo "Using existing repos.json"
          fi
          
          # Ensure the file has the right permissions
          chmod 644 repos.json
          
          # Verify JSON is valid
          if ! jq empty repos.json 2>/dev/null; then
            echo "Error: repos.json is not valid JSON"
            echo '{"repositories": []}' > repos.json
            echo "Reset to empty repos.json"
          fi
          
          # Create a backup of the original repos.json
          cp repos.json repos.json.bak
          
          # List the contents for debugging
          echo "Repository data contents:"
          ls -la repos.json* data/ || true
          
      - name: Build site
        run: |
          npm run build
          
          # Create SPA 404 page
          cat > dist/404.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Redirecting...</title>
            <script>sessionStorage.redirect = location.href.replace(/\.html$/, "");</script>
            <meta http-equiv="refresh" content="0;URL=/www/">
          </head>
          <body>Redirecting to <a href="/www/">home page</a>...</body>
          </html>
          EOF
          
          # Verify build output
          ls -la dist/
          [ -f dist/index.html ] || { echo "Error: index.html not found in dist/" && exit 1; }
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
